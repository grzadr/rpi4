---
- hosts: all
  name: Basic Raspberry Pi Setup
  tasks:
    - name: Set up basic facts
      ansible.builtin.set_fact:
        home_dir: "{{ ansible_env['HOME'] }}"
        distro: "{{ ansible_distribution_release }}"
        smb_user: "bkuser"
        enabled: true

    - name: Read list of files to install with apt
      ansible.builtin.set_fact:
        apt_list: "{{ item.split('\n') }}"
      with_file: "{{ playbook_dir }}/apt.list"

    - name: Read list of files to install with pip
      ansible.builtin.set_fact:
        pip_list: "{{ item.split('\n') }}"
      with_file: "{{ playbook_dir }}/pip.list"

    - name: Read smb password
      ansible.builtin.set_fact:
        smb_password: "{{ item }}"
      with_file: "{{ playbook_dir }}/secrets/smbpasswd"

    - name: Set Local Timezone
      ansible.builtin.shell: |
        set -e -o pipefail
        timedatectl set-timezone Europe/Warsaw
      args:
        executable: /bin/bash
      become: true
      when: enabled

    - name: Copy rc files
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ home_dir }}/"
        mode: '0644'
      with_fileglob: "{{ playbook_dir }}/config/rc/*"
      when: enabled

    - name: Copy bash source files
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ home_dir }}/"
        mode: '0644'
      with_fileglob: "{{ playbook_dir }}/config/source/*"
      when: enabled

    - name: Create Secrets Directory
      ansible.builtin.file:
        path: "{{ home_dir }}/secrets"
        state: directory
        mode: '0700'
      when: enabled

    # - name: Copy SSH Private Key
    #   ansible.builtin.copy:
    #     src: "{{ playbook_dir }}/secrets/ssh_keys/id_ed25519"
    #     dest: "/home/pi/.ssh/id_ed25519"
    #     mode: '0600'
    #     owner: 'pi'
    #     group: 'pi'
    #   become: true
    #   when: enabled

    # - name: Copy SSH Public Key
    #   ansible.builtin.copy:
    #     src: "{{ playbook_dir }}/secrets/ssh_keys/id_ed25519.pub"
    #     dest: "/home/pi/.ssh/id_ed25519.pub"
    #     mode: '0644'
    #     owner: 'pi'
    #     group: 'pi'
    #   become: true
    #   when: enabled

    - name: Add GitHub as known_host
      ansible.builtin.shell: |
        ssh -oStrictHostKeyChecking=accept-new git@github.com || true
      args:
        executable: /bin/bash
      when: enabled

    # - name: Copy OpenVPN config
    #   ansible.builtin.copy:
    #     src: "{{ item }}"
    #     dest: "/etc/openvpn/"
    #     mode: '0400'
    #   with_fileglob: "{{ playbook_dir }}/secrets/ovpn/*"
    #   become: true
    #   when: enabled

    - name: Find Files to Add to .bashrc
      ansible.builtin.find:
        path: "{{ home_dir }}"
        pattern: "source_*"
      register: source_files
      when: enabled

    - name: Add source to all source files in bashrc
      ansible.builtin.lineinfile:
        path: "{{ home_dir }}/.bashrc"
        line: ". {{ item.path }}"
      with_items: "{{ source_files.files }}"
      when: enabled

    # - name: Export GH_TOKEN is .bashrc
    #   ansible.builtin.lineinfile:
    #     path: "{{ home_dir }}/.bashrc"
    #     line: "export GH_TOKEN=$(cat ~/secrets/github.token)"
    #   when: true

    - name: Disable login with password
      ansible.builtin.lineinfile:
        path: "/etc/ssh/sshd_config"
        regexp: '^PasswordAuthentication '
        line: "PasswordAuthentication no"
      become: true
      when: enabled

    - name: Replace /etc/apt/sources.list
      ansible.builtin.template:
        src: "{{ playbook_dir }}/sources_template.j2"
        dest: "/etc/apt/sources.list"
        backup: true
        mode: '0644'
      become: true
      when: enabled

    - name: Update Packages
      ansible.builtin.apt:
        update_cache: true
        upgrade: "dist"
      become: true
      when: enabled

    - name: Install Basic Packages
      ansible.builtin.apt:
        name: [
          apt-transport-https,
          ca-certificates,
          curl,
          gnupg-agent,
          software-properties-common,
          apt-utils
        ]
      become: true
      when: enabled

    - name: Add Docker Repo
      ansible.builtin.shell: |
        set -e -o pipefail
        sudo rm -f /etc/apt/keyrings/docker.gpg;
        sudo install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
        sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        sudo chmod a+r /etc/apt/keyrings/docker.gpg
        echo \
        "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        executable: /bin/bash
      become: true
      when: enabled

    # - name: Add PostgreSQL Repository
    #   ansible.builtin.shell: |
    #     set -e -o pipefail
    #     wget -O- https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor |\
    #     sudo tee /usr/share/keyrings/postgres.gpg > /dev/null
    #     sudo sh -c 'echo "deb [signed-by=/usr/share/keyrings/postgres.gpg] \
    #     http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" \
    #     > /etc/apt/sources.list.d/pgdg.list';
    #   args:
    #     executable: /bin/bash
    #   become: true
    #   when: enabled

    # - name: Add gh Repo
    #   ansible.builtin.shell: |
    #     set -e -o pipefail
    #     rm -f /usr/share/keyrings/githubcli-archive-keyring.gpg;
    #     curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg \
    #     | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
    #     echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" \
    #     | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
    #   args:
    #     executable: /bin/bash
    #   become: true
    #   when: enabled

    - name: Add qBittorrent Repo
      ansible.builtin.apt_repository:
        repo: ppa:qbittorrent-team/qbittorrent-stable
      become: true
      when: enabled

    # - name: Add SpeedTest Repo
    #   ansible.builtin.shell: |
    #     set -e -o pipefail
    #     curl -s https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh \
    #     | sudo bash
    #   args:
    #     executable: /bin/bash
    #   become: true
    #   when: enabled

    - name: Add Terraform Repo
      ansible.builtin.shell: |
        set -e -o pipefail
        sudo rm -f /etc/apt/keyrings/hashicorp-archive-keyring.gpg;
        sudo install -m 0755 -d /etc/apt/keyrings
        wget -O- https://apt.releases.hashicorp.com/gpg | \
        gpg --dearmor | \
        sudo tee /etc/apt/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/etc/apt/keyrings/hashicorp-archive-keyring.gpg] \
        https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
        sudo tee /etc/apt/sources.list.d/hashicorp.list > /dev/null

      args:
        executable: /bin/bash
      become: true
      when: enabled

    - name: Install APT Packages
      ansible.builtin.apt:
        update_cache: true
        name: "{{ apt_list }}"
      become: true
      when: enabled

    - name: Add User to Docker Group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: true
      become: true
      when: enabled

    # - name: Install pip Packages
    #   ansible.builtin.pip:
    #     name: "{{ pip_list }}"
    #     executable: "pip3"
    #   become: true
    #   when: enabled

    - name: Create Secrets Directory
      ansible.builtin.file:
        path: "/mnt/bk"
        state: directory
        mode: '0777'
      become: true
      when: enabled

    - name: Add mount to Seagate
      ansible.builtin.lineinfile:
        path: "/etc/fstab"
        line: "UUID=09eac762-c108-4d59-bf52-4dc04a9f0e98 /mnt/bk ext4 rw,relatime,discard 0 0"
      become: true
      when: enabled

    - name: Add samba config
      ansible.builtin.blockinfile:
        path: /etc/samba/smb.conf
        block: |
          [sambashare]
              comment = Samba on Ubuntu
              path = /mnt/bk
              read only = no
              browsable = true
      become: true
      when: enabled

    - name: Restart SAMBA
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: true
        name: smbd
      become: true
      when: enabled

    - name: Allow SAMBA in Firewall
      ansible.builtin.shell: |
        ufw allow samba
      become: true
      when: enabled

    - name: Add SAMBA user
      ansible.builtin.user:
        name: "{{ smb_user }}"
        create_home: false
        password: '*'
      become: true
      when: enabled

    - name: Add Samba User to gpio Group
      ansible.builtin.user:
        name: "{{ smb_user }}"
        groups: gpio
        append: true
      become: true
      when: enabled

    - name: Set SAMBA password
      ansible.builtin.shell: |
        smbpasswd -x {{ smb_user }} || true;
        smbpasswd -a -s {{ smb_user }}
      args:
        stdin: "{{ smb_password }}"
        stdin_add_newline: true
        executable: /bin/bash
      become: true
      when: enabled

    # - name: Enable OpenVPN
    #   ansible.builtin.systemd:
    #     name: openvpn@vpnclient.service
    #     state: restarted
    #     enabled: true
    #     masked: false
    #   become: true
    #   when: enabled

    - name: Reboot
      ansible.builtin.reboot:
      become: true
      when: enabled

    - name: Check Docker
      ansible.builtin.shell: |
        docker run hello-world
      args:
        executable: /bin/bash
      when: enabled

    # - name: Debug
    #   ansible.builtin.debug:
    #     msg: "{{ apt_list }}"
    #     msg: "{{ rc_files[0] }}"
